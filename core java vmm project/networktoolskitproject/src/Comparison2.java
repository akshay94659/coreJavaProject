
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author simrat kaur gill
 */
public class Comparison2 extends javax.swing.JFrame {

    ArrayList<PCinfo> alsel;
    String request = " ";
    int x = 10;
    int i;
    NewJPanel np[];

    public Comparison2(ArrayList<PCinfo> alsel) {
        initComponents();
        setVisible(true);
        setSize(500, 500);
        this.alsel = alsel;

        job jb = new job();
        Thread t = new Thread(jb);
        t.start();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lb1 = new javax.swing.JLabel();
        lb2 = new javax.swing.JLabel();
        lb3 = new javax.swing.JLabel();
        lb4 = new javax.swing.JLabel();
        lb5 = new javax.swing.JLabel();
        p3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(153, 255, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(null);

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\simrat kaur gill\\Downloads\\pci.png")); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 20, 280, 230);

        lb1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lb1.setText("IP Address");
        jPanel2.add(lb1);
        lb1.setBounds(90, 300, 140, 22);

        lb2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lb2.setText("PC Name");
        jPanel2.add(lb2);
        lb2.setBounds(90, 370, 90, 22);

        lb3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lb3.setText("OS");
        jPanel2.add(lb3);
        lb3.setBounds(110, 440, 40, 22);

        lb4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lb4.setText("No. of Processors");
        jPanel2.add(lb4);
        lb4.setBounds(60, 510, 170, 22);

        lb5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lb5.setText("RAM");
        jPanel2.add(lb5);
        lb5.setBounds(100, 580, 70, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(90, 60, 300, 780);

        p3.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout p3Layout = new javax.swing.GroupLayout(p3);
        p3.setLayout(p3Layout);
        p3Layout.setHorizontalGroup(
            p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 790, Short.MAX_VALUE)
        );
        p3Layout.setVerticalGroup(
            p3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 780, Short.MAX_VALUE)
        );

        jPanel1.add(p3);
        p3.setBounds(400, 60, 790, 780);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(-80, -50, 1270, 930);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Comparison2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Comparison2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Comparison2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Comparison2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new Comparison2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lb1;
    private javax.swing.JLabel lb2;
    private javax.swing.JLabel lb3;
    private javax.swing.JLabel lb4;
    private javax.swing.JLabel lb5;
    private javax.swing.JPanel p3;
    // End of variables declaration//GEN-END:variables
 class client implements Runnable {

        String ip;

        client(String ip) {
            this.ip = ip;
        }

        @Override
        public void run() {
            try {

                Socket sock = new Socket(ip, 9000);
                DataOutputStream dos = new DataOutputStream(sock.getOutputStream());
                DataInputStream dis = new DataInputStream(sock.getInputStream());

                if (request.equals("Send Configuration")) {
                    dos.writeBytes("Send Configuration\r\n");

                    String ip = dis.readLine();
                    String pcname = dis.readLine();
                    String os = dis.readLine();
                    String processor = dis.readLine();
                    String ram = dis.readLine();

                    //                   j7.setText(ip);
                    //             j8.setText(pcname);
                    //               j9.setText(os);
                    //                 j10.setText(processor + " processors");
                    //                   j11.setText(Math.round(Long.parseLong(ram) / (1024.0 * 1024 * 1024)) + "" + " GB");
                    np[i] = new NewJPanel();
                    np[i].lb2.setText(ip);
                    np[i].lb3.setText(pcname);
                    np[i].lb4.setText(os);
                    np[i].lb5.setText(processor);
                    np[i].lb6.setText(ram);
                    np[i].setBounds(x, 10, 200, 700);
                    p3.add(np[i]);
                    x = x = 220;
                    p3.repaint();
                }
            } catch (IOException ex) {
                Logger.getLogger(Comparison2.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

    }

    class job implements Runnable {

    

        @Override
        public void run() {
            np = new NewJPanel[alsel.size()];
            for (i = 0; i < alsel.size(); i++) {
                request = "Send Configuration";
                client cp = new client(alsel.get(i).ip);
                Thread t = new Thread(cp);
                t.start();
                try {
                    t.join();
                } catch (InterruptedException ex) {
                    Logger.getLogger(Comparison2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }

    }

}
